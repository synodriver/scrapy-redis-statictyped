from redis import Redis
from scrapy import Item as Item, Spider as Spider
from scrapy.crawler import Crawler as Crawler
from scrapy.settings import Settings as Settings
from typing import Any, Callable, Optional, Union

default_serialize: Any

class RedisPipeline:
    server: Any = ...
    key: Any = ...
    serialize: Any = ...
    def __init__(self, server: Redis, key: Optional[str]=..., serialize_func: Optional[Callable[[dict], str]]=...) -> None: ...
    @classmethod
    def from_settings(cls: Any, settings: Settings) -> Any: ...
    @classmethod
    def from_crawler(cls: Any, crawler: Crawler) -> Any: ...
    def process_item(self, item: Union[Item, dict], spider: Spider) -> Any: ...
    def item_key(self, item: Union[Item, dict], spider: Spider) -> Any: ...
