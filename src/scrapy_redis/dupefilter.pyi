from redis import Redis
from scrapy import Request as Request, Spider as Spider
from scrapy.crawler import Crawler as Crawler
from scrapy.dupefilters import BaseDupeFilter
from scrapy.settings import Settings as Settings
from typing import Any, AnyStr, Optional

logger: Any

class RedisDupeFilter(BaseDupeFilter):
    logger: Any = ...
    server: Any = ...
    key: Any = ...
    debug: Any = ...
    logdupes: bool = ...
    def __init__(self, server: Redis, key: AnyStr, debug: Optional[bool]=...) -> None: ...
    @classmethod
    def from_settings(cls: Any, settings: Settings) -> RedisDupeFilter: ...
    @classmethod
    def from_crawler(cls: Any, crawler: Crawler) -> RedisDupeFilter: ...
    def request_seen(self, request: Request) -> bool: ...
    def request_fingerprint(self, request: Request) -> AnyStr: ...
    @classmethod
    def from_spider(cls: Any, spider: Spider) -> RedisDupeFilter: ...
    def close(self, reason: Optional[str]=...) -> None: ...
    def clear(self) -> None: ...
    def log(self, request: Request, spider: Spider) -> None: ...
